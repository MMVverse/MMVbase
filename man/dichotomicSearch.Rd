% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dichotomicSearch.R
\name{dichotomicSearch}
\alias{dichotomicSearch}
\title{Dichotomic Search}
\usage{
dichotomicSearch(X, Y, Ysol = 0, tol = 1e-09)
}
\arguments{
\item{X}{Vector of the abscissa where \code{f} is evaluated.}

\item{Y}{Vector of the ordinate where \code{f} is evaluated such as \code{f(X)=Y}.}

\item{Ysol}{Value of \code{f} for which we want to find \code{Xsol} (Default: 0).}

\item{tol}{Tolerance of the solution (Default: 1e-09).}
}
\value{
The solution \code{Xsol}
}
\description{
Algorithm to find \code{Xsol} such as \code{f(Xsol)=Ysol}, where the abscissa \code{X} and
ordinate \code{Y} are the vectorized representation of the function \code{f}.
}
\details{
The algorithm assumes that \code{f} is a monotonic function. It will first find \code{X[k]} and
\code{X[k+1]} such as \code{Xsol} is contained in \code{Y[k]-Y[k+1]} if increasing function (or
\code{Y[k+1]-Y[k]} if decreasing function). Then it is assumed that the function \code{f} is
linear between \code{X[k]} and \code{X[k+1]} to solve \code{f(Xsol)=Ysol}.
}
\seealso{
Other General Functions: 
\code{\link{IQRtableToDataFrame}()},
\code{\link{aux_CommonSubPath}()},
\code{\link{aux_createUSUBJID}()},
\code{\link{aux_formatErrorName}()},
\code{\link{aux_removeEscapeChar}()},
\code{\link{clopperPearsonMMV}()},
\code{\link{convert_Unit}()},
\code{\link{file.copyMMV}()},
\code{\link{find_MinMMV}()},
\code{\link{get_IXGDFtoRemove}()},
\code{\link{logLinTrapzMMV}()},
\code{\link{newtonRaphson.Function}()},
\code{\link{newtonRaphson.Vector}()},
\code{\link{rectintMMV}()},
\code{\link{simpsonMMV}()},
\code{\link{thisFile}()},
\code{\link{trapzMMV}()}
}
\author{
Mohammed H. Cherkaoui (MMV, \email{cherkaouim@mmv.org}), Venelin Mitov (IntiQuan)
}
\concept{General Functions}
